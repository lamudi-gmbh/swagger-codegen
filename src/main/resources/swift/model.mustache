
import Foundation

{{#models}}
{{#model}}
class {{classname}}: BaseModel, Deserializable {
{{#vars}}{{#description}}
    /*
     * {{{description}}}
     */{{/description}}
    var {{name}}:{{datatype}}?//{{#required}}req{{/required}}{{^required}}opt{{/required}}
{{/vars}}

    required init(data: [String : AnyObject]) { 
    {{#vars}}
        {{name}} <<<{{#complexType}}<{{/complexType}}{{#isContainer}}*{{/isContainer}} data["{{baseName}}"]{{/vars}} 

    }

    override func isValidObject() -> (Bool, String?) {
        var failedProps:[String] = []
        {{#vars}}{{#required}}
        if {{name}} == nil {
            failedProps.append("{{name}}")
        }
        {{/required}}{{/vars}}
        if failedProps.count > 0 {
            let failedPropsString = ", ".join(failedProps)
            return (false, "Agent object without (\(failedPropsString)) is not valid. Mapping failed.")
        }
        
        return (true, nil)
    }
}
{{/model}}
{{/models}}